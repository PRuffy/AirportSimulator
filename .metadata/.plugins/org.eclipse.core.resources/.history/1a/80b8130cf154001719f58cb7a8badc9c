/** 
 * 
 */
package framework.environment

import java.util.ArrayList

/** 
 * @author stay
 * 
 */
class Graph {
	var nodeList : ArrayList<GraphNode>
	var edgeList : ArrayList<GraphEdge>
	

	new(){
		nodeList = new ArrayList<GraphNode>
		edgeList = new ArrayList<GraphEdge>
	}
	
	def addNode(node : GraphNode){
		nodeList.add(node)
	}
	
	def addEdge(edge : GraphEdge){
		edgeList.add(edge)
	}
	
	def printNode(){
		for(n as GraphNode : nodeList){
			System.out.println(n.getId())
		}
	}
	
	def setEdgeAndNode(edgeId : String, departureNodeId : String, arrivingNodeId : String){
		var node1 = new GraphNode()
		var node2 = new GraphNode()		
		var edge = new GraphEdge()
		var i :int
		for(i = 0;i<= nodeList.size();i++){
			if(nodeList.get(i).getId() === departureNodeId){
				node1 = nodeList.get(i)
			}
			
			if(nodeList.get(i).getId()===arrivingNodeId){
				node2 = nodeList.get(i)
			}
		}
		
		for(i=0;i<=edgeList.size();i++){
			if(edgeList.get(i).getId()===edgeId){
				edge = edgeList.get(i)
			}
		}
		
		edge.addDepartureNode(node1)
		edge.addArrivalNode(node2)
		node1.addLeavingEdge(edge)
	}
	
	def getNode(id : String):GraphNode{

		for(n as GraphNode : nodeList){
			n.printProperty()
			return n
		}
		
	}
	
}
