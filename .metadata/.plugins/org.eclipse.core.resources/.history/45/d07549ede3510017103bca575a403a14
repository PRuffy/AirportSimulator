/** 
 * 
 */
package framework

import framework.environment.Graph
import framework.environment.SituatedObject
import framework.environment.QuadTree
import javax.xml.parsers.DocumentBuilderFactory
import javax.xml.parsers.DocumentBuilder
import java.io.File
import org.w3c.dom.Document
import javax.xml.parsers.ParserConfigurationException
import org.xml.sax.SAXException
import java.io.IOException
import org.w3c.dom.Element
import org.w3c.dom.NodeList
import org.w3c.dom.Node


/** 
 * @author stay
 * 
 */
class CreationOfEnv {
	def createGraph(filename : String, graph : Graph, objTree : QuadTree<SituatedObject>){
		var factory : DocumentBuilderFactory
		factory = DocumentBuilderFactory.newInstance()
		
		try {
			var builder : DocumentBuilder
			builder = factory.newDocumentBuilder()
			
			try {
  				var document : Document
				document = builder.parse(new File(filename))

				var racine : Element
				racine = document.getDocumentElement()
				System.out.println(racine.getNodeName());
				
				var racineNoeud : NodeList
				racineNoeud = racine.getChildNodes()
				
				var nbChild = racineNoeud.getLength()
				var i : int
				
				for (i = 0; i < nbChild; i++) {
					var SecondLevelNodeList : NodeList
					SecondLevelNodeList = racineNoeud.item(i).getChildNodes()
					var nbChild2 = SecondLevelNodeList.getLength()
					var j : int
					
					for(j = 0;j<nbChild2;j++){
						if(SecondLevelNodeList.item(j).getNodeType === Node.ELEMENT_NODE){
							var graphNode : Element
							graphNode = (Element) SecondLevelNodeList.item(j)
							
							System.out.println(graphNode.getAttribute("id"))
						}	
					}
				}
				
			}catch (e : ParserConfigurationException) {
			    e.printStackTrace();
			}catch (e : SAXException) {
				e.printStackTrace();
			} catch (e : IOException) {
    			e.printStackTrace();
			}
		}catch (e : ParserConfigurationException) {
    	e.printStackTrace();
    	}

		
		
		
	}
}
